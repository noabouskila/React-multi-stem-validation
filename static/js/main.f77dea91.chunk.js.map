{"version":3,"sources":["Components/MultiForm/Indicator/icons/healthy.svg","Components/MultiForm/Indicator/icons/diet.svg","Components/MultiForm/Indicator/icons/love.svg","Components/MultiForm/Indicator/icons/allergy.svg","Components/MultiForm/Indicator/icons/thumb.svg","Components/MultiForm/Indicator/Indicator.js","Components/MultiForm/Infos/CardEnd.js","Components/MultiForm/Infos/CardBegin.js","Components/MultiForm/SubForms/DietForm.js","Components/MultiForm/SubForms/FoodStyle.js","Components/MultiForm/SubForms/Allergies.js","Components/MultiForm/SubForms/HateLove.js","Components/MultiForm/Multiform.js","App.js","index.js"],"names":["Indicator","formIndex","className","style","width","src","healthy","alt","love","allergy","diet","thumb","CardEnd","props","console","log","AllFormData","Array","from","map","item","index","CardBegin","modifyIndex","onClick","DietForm","useState","dietForm","formData","setFormData","HandleRadio","e","target","value","onSubmit","preventDefault","htmlFor","type","onChange","name","id","FoodStyle","allcheckboxes","useRef","addCheck","el","current","includes","push","styleData","foodStyle","forEach","checkbox","checked","ref","Allergies","allergies","HateLove","prefs","hate","HandleTextArea","pref","placeholder","MultiForm","setFormIndex","setAllFormData","data","newData","firstPropNewData","Object","keys","elements","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f77dea91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/healthy.6ccebc97.svg\";","export default __webpack_public_path__ + \"static/media/diet.96ec42f9.svg\";","export default __webpack_public_path__ + \"static/media/love.eff86fb3.svg\";","export default __webpack_public_path__ + \"static/media/allergy.eab4a1e6.svg\";","export default __webpack_public_path__ + \"static/media/thumb.ca372aae.svg\";","import React from 'react'\r\nimport \"./Indicator.css\"\r\nimport healthy from \"./icons/healthy.svg\"\r\nimport diet from \"./icons/diet.svg\"\r\nimport love from \"./icons/love.svg\"\r\nimport allergy from \"./icons/allergy.svg\"\r\nimport thumb from \"./icons/thumb.svg\"\r\n\r\n\r\nexport default function Indicator({formIndex}) {\r\n  return (\r\n    //contient animation des icon d'indication\r\n    <div className='container-indicator'>\r\n        {/* contient la ligne jaune et rouge une sur lautre pour l'avancement du formulaire */}\r\n        <div className='container-lines'>\r\n            <div className='line upper-line'\r\n            style={{\r\n                width: formIndex === 1 ?  \"0%\":\r\n                formIndex === 2 ? \"0%\" :\r\n                formIndex === 3 ? \"25%\" :\r\n                formIndex === 4 ? \"50%\" :\r\n                formIndex === 5 ? \"75%\" :\r\n                formIndex === 6 ? \"100%\" :\"\"    \r\n            }}></div>\r\n            <div className='line under-line'></div>\r\n        </div>\r\n\r\n        {/* contien les images */}\r\n        <div className='container-img'>\r\n            <div className='bloc-img'>\r\n                <img src={healthy} alt=''/>\r\n            </div>\r\n            <div className='bloc-img'>\r\n                <img src={love} alt=''/>\r\n            </div>\r\n            <div className='bloc-img'>\r\n                <img src={allergy} alt=''/>\r\n            </div>\r\n            <div className='bloc-img'>\r\n                <img src={diet} alt=''/>\r\n            </div>\r\n            <div className='bloc-img'>\r\n                <img src={thumb} alt=''/>\r\n            </div>\r\n        </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport \"./Card.css\"\r\n\r\nexport default function CardEnd(props) {\r\n\r\n  console.log(typeof(props.AllFormData))\r\n\r\n  return (\r\n    <div className='card'>\r\n        <h1>Bravissimo ! </h1>\r\n        <p>On peut maintenant te proposer des plats en fonction de tes go√ªts.</p>\r\n\r\n        {/* CODE NON REUSSI ci dessous */}\r\n        <ul>\r\n          {Array.from(props.AllFormData).map((item,index)=>{\r\n            return <li>{props.AllFormData[item]}</li>\r\n          })}\r\n        </ul>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport \"./Card.css\"\r\n\r\nexport default function CardBegin({modifyIndex}) {\r\n  return (\r\n    <div className='card'>\r\n        <h1>üç£Aide-nous √† ravir tes papillesüå∂Ô∏è</h1>\r\n        <button onClick={()=>modifyIndex(2)}>COMMENCER</button>\r\n    </div>\r\n  )\r\n}\r\n","import React , {useState} from 'react'\r\nimport \"./SubForm.css\"\r\n\r\n// 1er formulaire\r\nexport default function DietForm(props) {\r\n\r\n    const [formData , setFormData] = useState({\r\n        dietForm : \"nodiet\"\r\n    })\r\n\r\n    // prevenir le comportement par defaut du form : envoi des donn√©es et rafraichir la page ::: car on veut que ca passe au formulaire suivant sans envoyer encore les donn√©es\r\n    const preventFunc = (e) => {e.preventDefault()}\r\n\r\n    const HandleRadio = e => {\r\n        setFormData({\r\n            dietForm : e.target.value\r\n        })\r\n    }\r\n    console.log(formData)\r\n\r\n  return (\r\n    <form onSubmit={preventFunc} className='diet-form'>\r\n        <p>Quel est ton r√©gime alimentaire ?</p>\r\n\r\n        <label htmlFor='no-diet'>Pas de r√©gime en particulier</label>\r\n        <input \r\n        type=\"radio\" \r\n        onChange={HandleRadio} \r\n        name=\"diet\"\r\n        id='no-diet'\r\n        value=\"nodiet\"/> \r\n\r\n        <label htmlFor='homnivorous'>Homnivore</label>\r\n        <input \r\n        type=\"radio\" \r\n        onChange={HandleRadio} \r\n        name=\"diet\"\r\n        id='homnivorous'\r\n        value=\"homnivorous\"/> \r\n\r\n        <label htmlFor='vegetarian'>V√©g√©tarien</label>\r\n        <input \r\n        type=\"radio\" \r\n        onChange={HandleRadio} \r\n        name=\"diet\"\r\n        id='vegetarian'\r\n        value=\"vegetarian\"/> \r\n\r\n        <label htmlFor='vegan'>V√©gan</label>\r\n        <input \r\n        type=\"radio\" \r\n        onChange={HandleRadio} \r\n        name=\"diet\"\r\n        id='vegan'\r\n        value=\"vegan\"/> \r\n\r\n        {/* envoyer aussi le contenu des donn√©es en passat formData √† modifyIndex */}\r\n        <button onClick={() => props.modifyIndex(3 , formData)}>Valider</button>\r\n        \r\n    </form>\r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport \"./SubForm.css\"\r\n\r\nexport default function FoodStyle(props) {\r\n\r\n    const preventFunc = (e) => {\r\n        // prevenir parametre par defaut\r\n        e.preventDefault()\r\n\r\n        // selectionner que les valeurs coch√©es\r\n        const styleData = {\r\n            foodStyle : []\r\n        }\r\n\r\n        allcheckboxes.current.forEach(checkbox => {\r\n            if(checkbox.checked){\r\n                styleData.foodStyle.push(checkbox.value)\r\n            }\r\n        })\r\n        \r\n        props.modifyIndex(4,styleData)\r\n    }\r\n\r\n    // recuperer toutes les valeur des input  useRef\r\n    const allcheckboxes = useRef([])\r\n\r\n    const addCheck = (el) =>{\r\n        if(el && !allcheckboxes.current.includes(el)){\r\n            allcheckboxes.current.push(el)\r\n        }\r\n    }\r\n\r\n\r\n    const handleReturn = () => {\r\n        props.modifyIndex(2)\r\n    }\r\n\r\n  return (\r\n    \r\n    <form className='checkbox-form' onSubmit={preventFunc}>\r\n        <p>Quelles sont tes cuisines pr√©f√©r√©es ?</p>\r\n        <span>Choix multiples.</span>\r\n\r\n        <label htmlFor='italian'>Italien</label>\r\n        <input  ref={addCheck}type=\"checkbox\" id=\"italian\" value=\"italian\"/>\r\n        \r\n        <label htmlFor='japanese'>Japonaise</label>\r\n        <input ref={addCheck} type=\"checkbox\" id=\"japanese\" value=\"japanese\"/>\r\n\r\n        <label htmlFor='indian'>Indienne</label>\r\n        <input ref={addCheck} type=\"checkbox\" id=\"indian\" value=\"indian\"/>\r\n\r\n        <label htmlFor='tha√Ø'>Tha√Ølandaise</label>\r\n        <input ref={addCheck} type=\"checkbox\" id=\"tha√Ø\" value=\"tha√Ø\"/>\r\n\r\n        <label htmlFor='french'>Francaise</label>\r\n        <input ref={addCheck} type=\"checkbox\" id=\"french\" value=\"french\"/>\r\n\r\n        <label htmlFor='chinese'>Chinoise</label>\r\n        <input ref={addCheck} type=\"checkbox\" id=\"chinese\" value=\"chinese\"/>\r\n\r\n        <div className='container-nav-btns'>\r\n            <button onClick={handleReturn}\r\n            type='button' className='prev'>Pr√©c√©dent</button>\r\n            {/* on met type button pour ne pas quil soit compt√© en tant que button */} \r\n            <button>Valider</button>\r\n\r\n            \r\n        </div>\r\n\r\n    </form>\r\n      \r\n   \r\n  )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport \"./SubForm.css\"\r\n\r\nexport default function Allergies(props) {\r\n\r\n    const preventFunc = (e) => {\r\n        // prevenir parametre par defaut\r\n        e.preventDefault()\r\n\r\n        // selectionner que les valeurs coch√©es\r\n        const styleData = {\r\n            allergies : []\r\n        }\r\n\r\n        allcheckboxes.current.forEach(checkbox => {\r\n            if(checkbox.checked){\r\n                styleData.allergies.push(checkbox.value)\r\n            }\r\n        })\r\n\r\n        props.modifyIndex(5,styleData)\r\n    }\r\n\r\n    // recuperer toutes les valeur des input  useRef\r\n    const allcheckboxes = useRef([])\r\n\r\n    const addCheck = (el) =>{\r\n        if(el && !allcheckboxes.current.includes(el)){\r\n            allcheckboxes.current.push(el)\r\n        }\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        props.modifyIndex(3)\r\n    }\r\n\r\n  return (\r\n    <form className='checkbox-form' onSubmit={preventFunc}>\r\n    <p>As-tu des allergies ?</p>\r\n    <span>Choix multiples.</span>\r\n\r\n    <label htmlFor='milk'>Lait</label>\r\n    <input  ref={addCheck}type=\"checkbox\" id=\"milk\" value=\"milk\"/>\r\n    \r\n    <label htmlFor='pollen'>Pollen</label>\r\n    <input ref={addCheck} type=\"checkbox\" id=\"pollen\" value=\"pollen\"/>\r\n\r\n    <label htmlFor='nut'>Noix</label>\r\n    <input ref={addCheck} type=\"checkbox\" id=\"nut\" value=\"nut\"/>\r\n\r\n    <label htmlFor='eggs'>Oeufs</label>\r\n    <input ref={addCheck} type=\"checkbox\" id=\"eggs\" value=\"eggs\"/>\r\n\r\n    <label htmlFor='seafood'>Fruits de mer</label>\r\n    <input ref={addCheck} type=\"checkbox\" id=\"seafood\" value=\"seafood\"/>\r\n\r\n    <div className='container-nav-btns'>\r\n        <button onClick={handleReturn}\r\n        type='button' className='prev'>Pr√©c√©dent</button>\r\n        {/* on met type button pour ne pas quil soit compt√© en tant que button */} \r\n        <button>Valider</button>  \r\n    </div>\r\n\r\n</form>\r\n  )\r\n}\r\n","import React,{useState} from 'react'\r\nimport \"./SubForm.css\"\r\n\r\nexport default function HateLove(props) {\r\n\r\n    const [formData, setFormData] = useState({\r\n        prefs: {\r\n            love : \" \",\r\n            hate : \" \"\r\n        }\r\n    })\r\n\r\n    const HandleTextArea =(e,pref) =>{\r\n        if(pref === \"love\"){\r\n            setFormData({\r\n                prefs:{\r\n                    ...formData.prefs,\r\n                    love:  e.target.value\r\n                }\r\n            })\r\n        }\r\n        else if(pref === \"hate\"){\r\n            setFormData({\r\n                prefs: {\r\n                    ...formData.prefs, \r\n                    hate : e.target.value\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    const preventFunc = (e) => {\r\n        e.preventDefault()\r\n\r\n        props.modifyIndex(6,formData)\r\n    }\r\n\r\n    const handleReturn = () => {\r\n        props.modifyIndex(3)\r\n    }\r\n\r\n  return (\r\n    <form className=\"preferences-form\" onSubmit={preventFunc}>\r\n        <p>Parles nous des aliments que tu pr√©f√®res et que tu d√©testes.</p>\r\n\r\n        <label htmlFor=\"prefered\">Tes aliments pr√©f√©r√©es , separ√©s par une virgule.</label>\r\n        <textarea\r\n        onChange={e=> HandleTextArea(e,\"love\")}\r\n        id=\"prefered\"\r\n        placeholder=\"Un ou plusieurs, i tu en as\"></textarea>\r\n\r\n        <label htmlFor=\"hated\">Les aliments que tu ne supportes pas , separ√©s par une virgule.</label>\r\n        <textarea \r\n        onChange={e=> HandleTextArea(e,\"hate\")}\r\n        id=\"hated\"\r\n        placeholder=\"Un ou plusieurs, i tu en as\"></textarea>\r\n\r\n        <div className=\"container-nav-btns\">\r\n            <button \r\n            className=\"prev\"\r\n            type=\"button\" \r\n            onClick={handleReturn}>\r\n                Pr√©c√©dent\r\n            </button>\r\n            <button>Valider</button>\r\n        </div>\r\n\r\n    </form>\r\n  )\r\n}\r\n","import React , {useState} from 'react'\r\nimport \"./MultiForm.css\"\r\nimport Indicator from './Indicator/Indicator'\r\nimport CardEnd from './Infos/CardEnd'\r\nimport CardBegin from './Infos/CardBegin'\r\nimport DietForm from './SubForms/DietForm'\r\nimport FoodStyle from './SubForms/FoodStyle'\r\nimport Allergies from './SubForms/Allergies'\r\nimport HateLove from './SubForms/HateLove'\r\n\r\n\r\nexport default function MultiForm() {\r\n\r\n    // Use State pour se deplacer entre les formulaire\r\n    const  [formIndex , setFormIndex] = useState(1)\r\n\r\n    //Usestate qui enregistre les donn√©es entr√©es du formulaire\r\n    const [AllFormData , setAllFormData] = useState({\r\n        dietForm : \" \" ,  //prend une seule donn√©e en string\r\n        foodStyle : [] , // prend plusieurs donn√©es\r\n        allergies : [] , // prend plusieurs donn√©es\r\n        prefs : {}       // prend plusieurs donn√©e en string\r\n    })\r\n\r\n    // modify index : permet de passer √† l'index suivant , qu'on passe au boutton onclick de card begin\r\n    const modifyIndex = (index , data) => {\r\n        setFormIndex(index)\r\n\r\n        // si en plus de changer l'index on veut aussi recolter des donn√©es : copie le grand objet + obtenir le premier parametre de lobjet data pour => l'assigner a l'objet copie AllFormData \r\n        // Object.keys Renvoie un tableau avec les propriete de chaque elements du tableau\r\n        if(data){\r\n            const newData = {...AllFormData}\r\n            const firstPropNewData = Object.keys(data)[0]\r\n\r\n            // le premier parametre du nouvel objet = au premier parametre de data \r\n            newData[firstPropNewData] = data[firstPropNewData]  \r\n\r\n            console.log(newData[firstPropNewData])\r\n\r\n            // mettre a jour l'etat\r\n            setAllFormData(newData)\r\n            \r\n            console.log(newData)\r\n        }    \r\n    }\r\n    console.log({AllFormData})\r\n\r\n\r\n    // rendu des composant sous forme de tableau\r\n    const elements = [\r\n        <CardBegin modifyIndex={modifyIndex} /> ,\r\n        <DietForm modifyIndex={modifyIndex} />  ,\r\n        <FoodStyle modifyIndex={modifyIndex} /> ,\r\n        <Allergies modifyIndex={modifyIndex} /> ,\r\n        <HateLove modifyIndex={modifyIndex} />  ,\r\n        <CardEnd modifyIndex={modifyIndex} AllFormData={AllFormData} /> \r\n    ]\r\n\r\n    return (\r\n        <div className='container-multiform'>\r\n            <Indicator formIndex={formIndex}/>\r\n\r\n            {/* rendu des composant a travers map */}\r\n            {elements.map((item,index) => {\r\n                if(formIndex === (index+1)){\r\n                   return  elements[index]\r\n                }\r\n            })}\r\n\r\n\r\n            {/* {formIndex ===1 \r\n            ? <CardBegin modifyIndex={modifyIndex} /> \r\n            : formIndex ===2 \r\n            ? <DietForm modifyIndex={modifyIndex}/>\r\n            : formIndex ===3\r\n            ? <FoodStyle modifyIndex={modifyIndex}/>\r\n            : formIndex ===4\r\n            ? <Allergies modifyIndex={modifyIndex}/>\r\n            : formIndex ===5\r\n            ? <HateLove modifyIndex={modifyIndex}/>\r\n            : formIndex ===6\r\n            ? <CardEnd modifyIndex={modifyIndex}/>\r\n            :\"\"\r\n            } */}\r\n\r\n        </div>\r\n       \r\n    )\r\n}\r\n","import \"./App.css\";\nimport \"./Components/MultiForm/Multiform\"\nimport MultiForm from \"./Components/MultiForm/Multiform\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MultiForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}